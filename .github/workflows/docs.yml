name: 0xgen Docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-pages
  cancel-in-progress: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs toolchain
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Build documentation
        run: mkdocs build --strict

      - name: Check generated site links
        run: python docs/scripts/check_links.py --skip-external site

      - name: Run LinkChecker on generated site
        run: |
          linkchecker \
            --check-extern \
            --no-robots \
            --timeout=10 \
            --threads=8 \
            --user-agent "0xgenDocsLinkChecker/1.0" \
            --ignore-url "^mailto:" \
            --ignore-url "^tel:" \
            --ignore-url "^javascript:" \
            --ignore-url "^data:" \
            --ignore-url "^https?://localhost" \
            --ignore-url "^https?://127\\.0\\.0\\.1" \
            --verbose \
            site/index.html

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  visual-regression:
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      DOCS_BASELINE_URL: https://rowandark.github.io/0xgen/
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs toolchain
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install visual test dependencies
        run: npm install
        working-directory: docs/visual-tests

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        working-directory: docs/visual-tests

      - name: Run docs visual regression tests
        run: npm test -- --reporter=line,html
        working-directory: docs/visual-tests

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 0xgen-docs-visual-report
          path: docs/visual-tests/playwright-report
          if-no-files-found: ignore

      - name: Upload visual diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: 0xgen-docs-visual-diffs
          path: docs/visual-tests/test-results
          if-no-files-found: ignore

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Assert canonical site prefix
        run: |
          expected="https://rowandark.github.io/0xgen/"
          actual="${{ steps.deployment.outputs.page_url }}"
          if [ "${actual%/}/" != "$expected" ]; then
            echo "::error ::Unexpected page URL '$actual' (expected '$expected')."
            exit 1
          fi

  smoke:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check published pages
        env:
          PUBLISHED_URL: ${{ needs.deploy.outputs.page_url }}
          CANONICAL_URL: https://rowandark.github.io/0xgen/
        run: |
          published="${PUBLISHED_URL%/}/"
          canonical="$CANONICAL_URL"
          if [ "$published" != "$canonical" ]; then
            echo "::error ::Unexpected published URL '$published' (expected '$canonical')."
            exit 1
          fi

          base="${canonical%/}"
          for path in "" "quickstart/" "cli/" "plugins/" "security/"; do
            curl -fSL "${base}/${path}" >/dev/null
          done
