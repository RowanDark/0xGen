name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign release artifacts
        env:
          COSIGN_YES: "true"
          COSIGN_EXPERIMENTAL: "1"
        run: |
          set -euo pipefail
          shopt -s nullglob
          for artifact in dist/*; do
            case "$artifact" in
              *.sig|*.pem|*.intoto.jsonl) continue ;;
            esac
            base=$(basename "$artifact")
            cosign sign-blob "$artifact" \
              --output-signature "dist/${base}.sig" \
              --output-certificate "dist/${base}.pem"
          done

      - name: Upload signatures to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=()
          for f in dist/*.sig dist/*.pem; do
            [ -e "$f" ] || continue
            files+=("$f")
          done
          if [ ${#files[@]} -gt 0 ]; then
            gh release upload "${GITHUB_REF_NAME}" "${files[@]}" --clobber
          fi
