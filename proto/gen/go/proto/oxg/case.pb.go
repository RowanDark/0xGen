// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: oxg/case.proto

package oxg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Case struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Asset         *Asset                 `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Vector        *AttackVector          `protobuf:"bytes,4,opt,name=vector,proto3" json:"vector,omitempty"`
	Summary       string                 `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
	Evidence      []*Evidence            `protobuf:"bytes,6,rep,name=evidence,proto3" json:"evidence,omitempty"`
	Proof         *ProofOfConcept        `protobuf:"bytes,7,opt,name=proof,proto3" json:"proof,omitempty"`
	Risk          *Risk                  `protobuf:"bytes,8,opt,name=risk,proto3" json:"risk,omitempty"`
	Confidence    float64                `protobuf:"fixed64,9,opt,name=confidence,proto3" json:"confidence,omitempty"`
	ConfidenceLog string                 `protobuf:"bytes,10,opt,name=confidence_log,json=confidenceLog,proto3" json:"confidence_log,omitempty"`
	Sources       []*SourceFinding       `protobuf:"bytes,11,rep,name=sources,proto3" json:"sources,omitempty"`
	GeneratedAt   string                 `protobuf:"bytes,12,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Case) Reset() {
	*x = Case{}
	mi := &file_oxg_case_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Case) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Case) ProtoMessage() {}

func (x *Case) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Case.ProtoReflect.Descriptor instead.
func (*Case) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{0}
}

func (x *Case) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Case) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Case) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *Case) GetVector() *AttackVector {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Case) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Case) GetEvidence() []*Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *Case) GetProof() *ProofOfConcept {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Case) GetRisk() *Risk {
	if x != nil {
		return x.Risk
	}
	return nil
}

func (x *Case) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Case) GetConfidenceLog() string {
	if x != nil {
		return x.ConfidenceLog
	}
	return ""
}

func (x *Case) GetSources() []*SourceFinding {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Case) GetGeneratedAt() string {
	if x != nil {
		return x.GeneratedAt
	}
	return ""
}

func (x *Case) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Identifier    string                 `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_oxg_case_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{1}
}

func (x *Asset) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Asset) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Asset) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type AttackVector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttackVector) Reset() {
	*x = AttackVector{}
	mi := &file_oxg_case_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttackVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackVector) ProtoMessage() {}

func (x *AttackVector) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackVector.ProtoReflect.Descriptor instead.
func (*AttackVector) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{2}
}

func (x *AttackVector) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AttackVector) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Evidence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plugin        string                 `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Evidence      string                 `protobuf:"bytes,4,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_oxg_case_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{3}
}

func (x *Evidence) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *Evidence) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Evidence) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Evidence) GetEvidence() string {
	if x != nil {
		return x.Evidence
	}
	return ""
}

func (x *Evidence) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ProofOfConcept struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Steps         []string               `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProofOfConcept) Reset() {
	*x = ProofOfConcept{}
	mi := &file_oxg_case_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProofOfConcept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofOfConcept) ProtoMessage() {}

func (x *ProofOfConcept) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofOfConcept.ProtoReflect.Descriptor instead.
func (*ProofOfConcept) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{4}
}

func (x *ProofOfConcept) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ProofOfConcept) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Risk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      Severity               `protobuf:"varint,1,opt,name=severity,proto3,enum=oxg.common.Severity" json:"severity,omitempty"`
	Score         float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	Rationale     string                 `protobuf:"bytes,3,opt,name=rationale,proto3" json:"rationale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_oxg_case_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{5}
}

func (x *Risk) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *Risk) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Risk) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

type SourceFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Plugin        string                 `protobuf:"bytes,2,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Severity      Severity               `protobuf:"varint,4,opt,name=severity,proto3,enum=oxg.common.Severity" json:"severity,omitempty"`
	Target        string                 `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceFinding) Reset() {
	*x = SourceFinding{}
	mi := &file_oxg_case_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceFinding) ProtoMessage() {}

func (x *SourceFinding) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceFinding.ProtoReflect.Descriptor instead.
func (*SourceFinding) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{6}
}

func (x *SourceFinding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SourceFinding) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *SourceFinding) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SourceFinding) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *SourceFinding) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type CaseExport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cases         []*Case                `protobuf:"bytes,1,rep,name=cases,proto3" json:"cases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaseExport) Reset() {
	*x = CaseExport{}
	mi := &file_oxg_case_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaseExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseExport) ProtoMessage() {}

func (x *CaseExport) ProtoReflect() protoreflect.Message {
	mi := &file_oxg_case_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseExport.ProtoReflect.Descriptor instead.
func (*CaseExport) Descriptor() ([]byte, []int) {
	return file_oxg_case_proto_rawDescGZIP(), []int{7}
}

func (x *CaseExport) GetCases() []*Case {
	if x != nil {
		return x.Cases
	}
	return nil
}

var File_oxg_case_proto protoreflect.FileDescriptor

const file_oxg_case_proto_rawDesc = "" +
	"\n" +
	"\x0eoxg/case.proto\x12\x0foxg.casebuilder\x1a\x10oxg/common.proto\"\xe2\x04\n" +
	"\x04Case\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12,\n" +
	"\x05asset\x18\x03 \x01(\v2\x16.oxg.casebuilder.AssetR\x05asset\x125\n" +
	"\x06vector\x18\x04 \x01(\v2\x1d.oxg.casebuilder.AttackVectorR\x06vector\x12\x18\n" +
	"\asummary\x18\x05 \x01(\tR\asummary\x125\n" +
	"\bevidence\x18\x06 \x03(\v2\x19.oxg.casebuilder.EvidenceR\bevidence\x125\n" +
	"\x05proof\x18\a \x01(\v2\x1f.oxg.casebuilder.ProofOfConceptR\x05proof\x12)\n" +
	"\x04risk\x18\b \x01(\v2\x15.oxg.casebuilder.RiskR\x04risk\x12\x1e\n" +
	"\n" +
	"confidence\x18\t \x01(\x01R\n" +
	"confidence\x12%\n" +
	"\x0econfidence_log\x18\n" +
	" \x01(\tR\rconfidenceLog\x128\n" +
	"\asources\x18\v \x03(\v2\x1e.oxg.casebuilder.SourceFindingR\asources\x12!\n" +
	"\fgenerated_at\x18\f \x01(\tR\vgeneratedAt\x129\n" +
	"\x06labels\x18\r \x03(\v2!.oxg.casebuilder.Case.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"U\n" +
	"\x05Asset\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x1e\n" +
	"\n" +
	"identifier\x18\x02 \x01(\tR\n" +
	"identifier\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"8\n" +
	"\fAttackVector\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xee\x01\n" +
	"\bEvidence\x12\x16\n" +
	"\x06plugin\x18\x01 \x01(\tR\x06plugin\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1a\n" +
	"\bevidence\x18\x04 \x01(\tR\bevidence\x12C\n" +
	"\bmetadata\x18\x05 \x03(\v2'.oxg.casebuilder.Evidence.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x0eProofOfConcept\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x14\n" +
	"\x05steps\x18\x02 \x03(\tR\x05steps\"l\n" +
	"\x04Risk\x120\n" +
	"\bseverity\x18\x01 \x01(\x0e2\x14.oxg.common.SeverityR\bseverity\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12\x1c\n" +
	"\trationale\x18\x03 \x01(\tR\trationale\"\x95\x01\n" +
	"\rSourceFinding\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06plugin\x18\x02 \x01(\tR\x06plugin\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x120\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x14.oxg.common.SeverityR\bseverity\x12\x16\n" +
	"\x06target\x18\x05 \x01(\tR\x06target\"9\n" +
	"\n" +
	"CaseExport\x12+\n" +
	"\x05cases\x18\x01 \x03(\v2\x15.oxg.casebuilder.CaseR\x05casesB*Z(github.com/RowanDark/0xgen/proto/oxg;oxgb\x06proto3"

var (
	file_oxg_case_proto_rawDescOnce sync.Once
	file_oxg_case_proto_rawDescData []byte
)

func file_oxg_case_proto_rawDescGZIP() []byte {
	file_oxg_case_proto_rawDescOnce.Do(func() {
		file_oxg_case_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oxg_case_proto_rawDesc), len(file_oxg_case_proto_rawDesc)))
	})
	return file_oxg_case_proto_rawDescData
}

var file_oxg_case_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_oxg_case_proto_goTypes = []any{
	(*Case)(nil),           // 0: oxg.casebuilder.Case
	(*Asset)(nil),          // 1: oxg.casebuilder.Asset
	(*AttackVector)(nil),   // 2: oxg.casebuilder.AttackVector
	(*Evidence)(nil),       // 3: oxg.casebuilder.Evidence
	(*ProofOfConcept)(nil), // 4: oxg.casebuilder.ProofOfConcept
	(*Risk)(nil),           // 5: oxg.casebuilder.Risk
	(*SourceFinding)(nil),  // 6: oxg.casebuilder.SourceFinding
	(*CaseExport)(nil),     // 7: oxg.casebuilder.CaseExport
	nil,                    // 8: oxg.casebuilder.Case.LabelsEntry
	nil,                    // 9: oxg.casebuilder.Evidence.MetadataEntry
	(Severity)(0),          // 10: oxg.common.Severity
}
var file_oxg_case_proto_depIdxs = []int32{
	1,  // 0: oxg.casebuilder.Case.asset:type_name -> oxg.casebuilder.Asset
	2,  // 1: oxg.casebuilder.Case.vector:type_name -> oxg.casebuilder.AttackVector
	3,  // 2: oxg.casebuilder.Case.evidence:type_name -> oxg.casebuilder.Evidence
	4,  // 3: oxg.casebuilder.Case.proof:type_name -> oxg.casebuilder.ProofOfConcept
	5,  // 4: oxg.casebuilder.Case.risk:type_name -> oxg.casebuilder.Risk
	6,  // 5: oxg.casebuilder.Case.sources:type_name -> oxg.casebuilder.SourceFinding
	8,  // 6: oxg.casebuilder.Case.labels:type_name -> oxg.casebuilder.Case.LabelsEntry
	9,  // 7: oxg.casebuilder.Evidence.metadata:type_name -> oxg.casebuilder.Evidence.MetadataEntry
	10, // 8: oxg.casebuilder.Risk.severity:type_name -> oxg.common.Severity
	10, // 9: oxg.casebuilder.SourceFinding.severity:type_name -> oxg.common.Severity
	0,  // 10: oxg.casebuilder.CaseExport.cases:type_name -> oxg.casebuilder.Case
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_oxg_case_proto_init() }
func file_oxg_case_proto_init() {
	if File_oxg_case_proto != nil {
		return
	}
	file_oxg_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oxg_case_proto_rawDesc), len(file_oxg_case_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oxg_case_proto_goTypes,
		DependencyIndexes: file_oxg_case_proto_depIdxs,
		MessageInfos:      file_oxg_case_proto_msgTypes,
	}.Build()
	File_oxg_case_proto = out.File
	file_oxg_case_proto_goTypes = nil
	file_oxg_case_proto_depIdxs = nil
}
