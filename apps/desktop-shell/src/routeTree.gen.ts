/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RunsRouteImport } from './routes/runs'
import { Route as FlowsRouteImport } from './routes/flows'
import { Route as CasesRouteImport } from './routes/cases'
import { Route as IndexRouteImport } from './routes/index'

const RunsRoute = RunsRouteImport.update({
  id: '/runs',
  path: '/runs',
  getParentRoute: () => rootRouteImport,
} as any)
const FlowsRoute = FlowsRouteImport.update({
  id: '/flows',
  path: '/flows',
  getParentRoute: () => rootRouteImport,
} as any)
const CasesRoute = CasesRouteImport.update({
  id: '/cases',
  path: '/cases',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/flows': typeof FlowsRoute
  '/runs': typeof RunsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/flows': typeof FlowsRoute
  '/runs': typeof RunsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/flows': typeof FlowsRoute
  '/runs': typeof RunsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cases' | '/flows' | '/runs'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cases' | '/flows' | '/runs'
  id: '__root__' | '/' | '/cases' | '/flows' | '/runs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CasesRoute: typeof CasesRoute
  FlowsRoute: typeof FlowsRoute
  RunsRoute: typeof RunsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/runs': {
      id: '/runs'
      path: '/runs'
      fullPath: '/runs'
      preLoaderRoute: typeof RunsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/flows': {
      id: '/flows'
      path: '/flows'
      fullPath: '/flows'
      preLoaderRoute: typeof FlowsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cases': {
      id: '/cases'
      path: '/cases'
      fullPath: '/cases'
      preLoaderRoute: typeof CasesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CasesRoute: CasesRoute,
  FlowsRoute: FlowsRoute,
  RunsRoute: RunsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
